src/components/BookList.js

import React, { useState, useEffect } from "react";
import axios from "axios";

const BookList = () => {
  const [books, setBooks] = useState([]);
  const [editId, setEditId] = useState(null);
  const [editData, setEditData] = useState({ title: "", author: "", year: "" });

  useEffect(() => {
    fetchBooks();
  }, []);

  const fetchBooks = async () => {
    try {
      const res = await axios.get("http://localhost:5000/api/books");
      setBooks(res.data);
    } catch (error) {
      console.error("Error fetching books:", error);
    }
  };

  const deleteBook = async (id) => {
    try {
      await axios.delete(`http://localhost:5000/api/books/${id}`);
      fetchBooks();
    } catch (error) {
      console.error("Error deleting book:", error);
    }
  };

  const editBook = (book) => {
    setEditId(book._id || book.id); // use _id if coming from MongoDB
    setEditData({ title: book.title, author: book.author, year: book.year });
  };

  const updateBook = async () => {
    try {
      await axios.put(`http://localhost:5000/api/books/${editId}`, editData);
      setEditId(null);
      fetchBooks();
    } catch (error) {
      console.error("Error updating book:", error);
    }
  };

  return (
    <div>
      <h2>Book List</h2>
      {books.map((book) => (
        <div key={book._id || book.id} style={{ border: "1px solid #ccc", margin: "5px", padding: "5px" }}>
          {editId === (book._id || book.id) ? (
            <>
              <input
                value={editData.title}
                onChange={(e) => setEditData({ ...editData, title: e.target.value })}
              />
              <input
                value={editData.author}
                onChange={(e) => setEditData({ ...editData, author: e.target.value })}
              />
              <input
                value={editData.year}
                onChange={(e) => setEditData({ ...editData, year: e.target.value })}
              />
              <button onClick={updateBook}>Save</button>
            </>
          ) : (
            <>
              <p>
                <strong>{book.title}</strong> by {book.author} ({book.year})
              </p>
              <button onClick={() => editBook(book)}>Edit</button>
              <button onClick={() => deleteBook(book._id || book.id)}>Delete</button>
            </>
          )}
        </div>
      ))}
    </div>
  );
};

export default BookList;


src/components/AddBook.js

import React, { useState } from "react";
import axios from "axios";

const AddBook = ({ fetchBooks }) => {
  const [book, setBook] = useState({ title: "", author: "", year: "" });

  const addBook = async () => {
    try {
      await axios.post("http://localhost:5000/api/books", book);
      setBook({ title: "", author: "", year: "" });
      fetchBooks(); // Refresh the book list
    } catch (error) {
      console.error("Error adding book:", error);
    }
  };

  return (
    <div>
      <h2>Add Book</h2>
      <input
        placeholder="Title"
        value={book.title}
        onChange={(e) => setBook({ ...book, title: e.target.value })}
      />
      <input
        placeholder="Author"
        value={book.author}
        onChange={(e) => setBook({ ...book, author: e.target.value })}
      />
      <input
        placeholder="Year"
        value={book.year}
        onChange={(e) => setBook({ ...book, year: e.target.value })}
      />
      <button onClick={addBook}>Add</button>
    </div>
  );
};

export default AddBook;


src/components/BookList.js

import React, { useState } from "react";
import axios from "axios";

const BookList = ({ books, fetchBooks }) => {
  const [editId, setEditId] = useState(null);
  const [editData, setEditData] = useState({ title: "", author: "", year: "" });

  const deleteBook = async (id) => {
    try {
      await axios.delete(`http://localhost:5000/api/books/${id}`);
      fetchBooks();
    } catch (error) {
      console.error("Error deleting book:", error);
    }
  };

  const editBook = (book) => {
    setEditId(book._id || book.id);
    setEditData({ title: book.title, author: book.author, year: book.year });
  };

  const updateBook = async () => {
    try {
      await axios.put(`http://localhost:5000/api/books/${editId}`, editData);
      setEditId(null);
      fetchBooks();
    } catch (error) {
      console.error("Error updating book:", error);
    }
  };

  return (
    <div>
      <h2>Book List</h2>
      {books.map((book) => (
        <div
          key={book._id || book.id}
          style={{ border: "1px solid #ccc", margin: "5px", padding: "5px" }}
        >
          {editId === (book._id || book.id) ? (
            <>
              <input
                value={editData.title}
                onChange={(e) => setEditData({ ...editData, title: e.target.value })}
              />
              <input
                value={editData.author}
                onChange={(e) => setEditData({ ...editData, author: e.target.value })}
              />
              <input
                value={editData.year}
                onChange={(e) => setEditData({ ...editData, year: e.target.value })}
              />
              <button onClick={updateBook}>Save</button>
            </>
          ) : (
            <>
              <p>
                <strong>{book.title}</strong> by {book.author} ({book.year})
              </p>
              <button onClick={() => editBook(book)}>Edit</button>
              <button onClick={() => deleteBook(book._id || book.id)}>Delete</button>
            </>
          )}
        </div>
      ))}
    </div>
  );
};

export default BookList;

